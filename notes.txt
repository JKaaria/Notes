Sub EmailWithTableAndHeaders()
    Dim outlookApp As Object
    Dim outlookMail As Object
    Dim bodyText As String
    Dim ws As Worksheet
    Dim logicTable As Worksheet
    Dim columnArray As Variant
    Dim col As Variant
    Dim cellValue As String
    Dim headerValue As String
    Dim toAddress As String
    Dim firmDepot As String
    Dim sourceStatus As String

    ' Set the active worksheet
    Set ws = ActiveSheet
    ' Set the LogicTable sheet
    Set logicTable = ThisWorkbook.Sheets("LogicTable")

    ' Set columns to copy
    columnArray = Array("C", "D", "F", "G", "H", "I", "J", "K", "L", "M", "V", "AA")

    ' Lookup corresponding Firm Depot (cell O2) and Source Status (cell M2) in LogicTable
    firmDepot = ws.Range("O2").Value
    sourceStatus = ws.Range("M2").Value

    ' Lookup the "To" address in LogicTable
    On Error Resume Next
    toAddress = Application.WorksheetFunction.Index(logicTable.Range("B2:ZZ100"), _
               Application.WorksheetFunction.Match(firmDepot, logicTable.Range("A2:A100"), 0), _
               Application.WorksheetFunction.Match(sourceStatus, logicTable.Range("B1:ZZ1"), 0))
    On Error GoTo 0

    If toAddress = "" Then
        MsgBox "To address not found in LogicTable.", vbExclamation
        Exit Sub
    End If

    ' Create Outlook Application
    On Error Resume Next
    Set outlookApp = GetObject(, "Outlook.Application")
    On Error GoTo 0

    If outlookApp Is Nothing Then
        Set outlookApp = CreateObject("Outlook.Application")
    End If

    ' Create a new mail item
    Set outlookMail = outlookApp.CreateItem(0)

    ' Customize email properties
    With outlookMail
        .To = toAddress ' Set "To" to the looked up address from LogicTable
        .Subject = ws.Range("O2").Value ' Set subject to the contents of cell O2

        ' Construct the email body with headers and selected columns in table format
        bodyText = "<html><body><p>Here are the selected columns:</p><table border='1' style='border-collapse: collapse;'>"

        ' Add header row to the email body
        bodyText = bodyText & "<tr>"
        For Each col In columnArray
            ' Get header value from the worksheet
            headerValue = ws.Range(col & "1").Value
            bodyText = bodyText & "<th>" & headerValue & "</th>"
        Next col
        bodyText = bodyText & "</tr>"

        ' Loop through each row in the worksheet
        For i = 2 To ws.Cells(ws.Rows.Count, 1).End(xlUp).Row ' Assuming headers are in row 1
            ' Append selected columns to the email body as a table row
            bodyText = bodyText & "<tr>"
            For Each col In columnArray
                ' Convert cell value to string before appending to the body
                cellValue = CStr(ws.Range(col & i).Value)
                bodyText = bodyText & "<td>" & cellValue & "</td>"
            Next col
            bodyText = bodyText & "</tr>"
        Next i

        ' Close the table and body tags
        bodyText = bodyText & "</table></body></html>"

        ' Set the email body as HTML
        .HTMLBody = bodyText

        ' Uncomment the line below if you want to display the email before sending
        '.Display

        ' Comment out the line above and uncomment the line below to send the email directly
        '.Send
    End With

    ' Release Outlook objects
    Set outlookMail = Nothing
    Set outlookApp = Nothing
End Sub
