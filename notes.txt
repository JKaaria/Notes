Sub SendMismatchDetailsEmail()

    ' Define variables
    Dim wsResult As Worksheet
    Dim wsLogic As Worksheet
    Dim lastRowResult As Long
    Dim outlookApp As Object
    Dim outlookMail As Object
    Dim emailBody As String
    
    ' Set worksheets
    Set wsResult = ThisWorkbook.Sheets("ResultSheet") ' Replace "ResultSheet" with the actual name of your sheet
    Set wsLogic = ThisWorkbook.Sheets("LogicTable") ' Replace "LogicTable" with the actual name of your sheet
    
    ' Find the last row in ResultSheet
    lastRowResult = wsResult.Cells(wsResult.Rows.Count, 1).End(xlUp).Row
    
    ' Loop through the rows in ResultSheet to check for matching entities
    For i = 2 To lastRowResult
        ' Add details of each row to email body
        emailBody = emailBody & "Row " & i & ": " & IIf(wsResult.Cells(i, 4).Value = wsResult.Cells(i, 5).Value, "Successful Trade", "Mismatching Entities") & vbCrLf & _
                     "SDS: " & wsResult.Cells(i, 1).Value & vbCrLf & _
                     "Account Legal Name: " & wsResult.Cells(i, 2).Value & vbCrLf & _
                     "Trade ID: " & wsResult.Cells(i, 3).Value & vbCrLf & _
                     "Trade Data Entity: " & wsResult.Cells(i, 4).Value & vbCrLf & _
                     "Logic Table Entity: " & wsResult.Cells(i, 5).Value & vbCrLf & vbCrLf
    Next i
    
    ' Loop through the rows in LogicTable to send successful trades to the email contacts
    Dim uniqueSDS As Collection
    Set uniqueSDS = New Collection
    
    For j = 2 To wsLogic.Cells(wsLogic.Rows.Count, 1).End(xlUp).Row
        ' Check if SDS exists in ResultSheet and there is no mismatch
        If Not IsError(Application.Match(wsLogic.Cells(j, 1).Value, wsResult.Columns(1), 0)) Then
            ' Get the email address from column H in LogicTable
            Dim emailAddress As String
            emailAddress = wsLogic.Cells(j, 8).Value
            
            ' Check if SDS is already in the collection
            On Error Resume Next
            uniqueSDS.Add Item:=1, Key:=wsLogic.Cells(j, 1).Value
            On Error GoTo 0
            
            ' If SDS is not in the collection, create a new email body
            If Err.Number <> 0 Then
                emailBody = "Successful Trade Details for SDS: " & wsLogic.Cells(j, 1).Value & vbCrLf & vbCrLf
            End If
            
            ' Add details of successful trade to email body
            emailBody = emailBody & "SDS: " & wsLogic.Cells(j, 1).Value & vbCrLf & _
                         "Account Legal Name: " & wsResult.Cells(Application.Match(wsLogic.Cells(j, 1).Value, wsResult.Columns(1), 0), 2).Value & vbCrLf & _
                         "Trade ID: " & wsResult.Cells(Application.Match(wsLogic.Cells(j, 1).Value, wsResult.Columns(1), 0), 3).Value & vbCrLf & _
                         "Trade Data Entity: " & wsResult.Cells(Application.Match(wsLogic.Cells(j, 1).Value, wsResult.Columns(1), 0), 4).Value & vbCrLf & _
                         "Logic Table Entity: " & wsResult.Cells(Application.Match(wsLogic.Cells(j, 1).Value, wsResult.Columns(1), 0), 5).Value & vbCrLf & vbCrLf
                         
            ' If SDS is the last one in LogicTable, send the email
            If j = wsLogic.Cells(wsLogic.Rows.Count, 1).End(xlUp).Row Then
                ' Create Outlook Application
                Set outlookApp = CreateObject("Outlook.Application")
                
                ' Create a new mail item
                Set outlookMail = outlookApp.CreateItem(0)
                
                ' Customize email properties
                With outlookMail
                    .Subject = "Successful Trade Details"
                    .Body = emailBody & vbCrLf & "Please review and take necessary actions." & vbCrLf & vbCrLf & _
                            "Best regards," & vbCrLf & _
                            "Your Name"
                    
                    ' Add recipients' email address from LogicTable
                    .Recipients.Add emailAddress
                    
                    ' Send the email
                    .Send
                End With
                
                ' Release Outlook objects
                Set outlookMail = Nothing
                Set outlookApp = Nothing
                
                ' Clear the email body for the next SDS
                emailBody = ""
            End If
        End If
    Next j

    MsgBox "Mismatch and successful trades details emails sent!", vbInformation

End Sub
