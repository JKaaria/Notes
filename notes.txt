
Sub One()
    ' Define variables
    Dim sourceFolderPath As String
    Dim sourceFileName As String
    Dim sourceFilePath As String
    Dim wsSource As Worksheet
    Dim wsTarget As Worksheet
    Dim targetSheetName As String
    
    ' Define the source folder path
    sourceFolderPath = ThisWorkbook.Path & "\"
    
    ' Define the source file name pattern
    sourceFileName = "sstemp*.*" ' This assumes the file extension can be anything
    
    ' Specify the target sheet name (adjust as needed)
    targetSheetName = "TradeData"
    
    ' Construct the full path to the source file
    sourceFilePath = Dir(sourceFolderPath & sourceFileName)
    
    ' Check if the source file exists
    If sourceFilePath = "" Then
        MsgBox "Source file not found.", vbExclamation
    Else
        ' Set the source worksheet
        Workbooks.Open sourceFolderPath & sourceFilePath
        Set wsSource = ActiveWorkbook.Sheets(1)
        
        ' Set the target worksheet in the active workbook (adjust the sheet index as needed)
        On Error Resume Next
        Set wsTarget = ThisWorkbook.Sheets(targetSheetName)
        On Error GoTo 0
        
        ' Clear the contents of the target sheet
        wsTarget.Cells.Clear
        
        ' If the target sheet doesn't exist, create it
        If wsTarget Is Nothing Then
            Set wsTarget = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
            wsTarget.Name = targetSheetName
        End If
        
        ' Copy data from source to target
        wsSource.UsedRange.Copy Destination:=wsTarget.Range("A1")
        
        ' Close the source workbook without saving changes
        ActiveWorkbook.Close SaveChanges:=False
    End If
End Sub

Sub Two()
    Dim wsTrade As Worksheet
    Dim LastRow As Long
    Dim latestSrcCol As Integer
    Dim i As Long
    
    ' Set worksheet
    Set wsTrade = ThisWorkbook.Sheets("TradeData")
    
    ' Set column number based on header "Latest Src"
    latestSrcCol = WorksheetFunction.Match("Latest Src", wsTrade.Rows(1), 0)
    
    ' Find the last row in the sheet
    LastRow = wsTrade.Cells(wsTrade.Rows.Count, latestSrcCol).End(xlUp).Row
    
    ' Loop through "Latest Src" column starting from the second row
    For i = LastRow To 2 Step -1
        ' Check if the value is not "WIService"
        If wsTrade.Cells(i, latestSrcCol).Value <> "WIService" Then
            ' If not, remove the row
            wsTrade.Rows(i).Delete
        End If
    Next i
End Sub

Sub Three()
    Dim wsTrade As Worksheet
    Dim lastRow As Long
    Dim latestSrcCol As Integer
    Dim quantityCol As Integer
    Dim i As Long
    Dim outlookApp As Object
    Dim outlookMail As Object
    Dim emailBody As String

    ' Set worksheet
    Set wsTrade = ThisWorkbook.Sheets("TradeData")

    ' Set column numbers based on headers
    latestSrcCol = WorksheetFunction.Match("Latest Src", wsTrade.Rows(1), 0)
    quantityCol = WorksheetFunction.Match("Quantity", wsTrade.Rows(1), 0)

    ' Find the last row in the sheet
    lastRow = wsTrade.Cells(wsTrade.Rows.Count, latestSrcCol).End(xlUp).Row

    ' Create Outlook Application
    Set outlookApp = CreateObject("Outlook.Application")

    ' Loop through each row in "Latest Src" column
    For i = 2 To lastRow
        ' Check if the value is "WIService" and Quantity is greater than or equal to 100,000,000
        If wsTrade.Cells(i, latestSrcCol).Value = "WIService" And wsTrade.Cells(i, quantityCol).Value >= 100000000 Then
            ' Generate HTML-formatted email body
            emailBody = "<html><body>"
            emailBody = emailBody & "<p><strong>Trade ID:</strong> " & wsTrade.Cells(i, WorksheetFunction.Match("Trade ID", wsTrade.Rows(1), 0)).Value & "</p>"
            emailBody = emailBody & "<p><strong>Quantity:</strong> " & wsTrade.Cells(i, quantityCol).Value & "</p>"
            emailBody = emailBody & "<p><strong>BARC Direction:</strong> " & wsTrade.Cells(i, WorksheetFunction.Match("BARC Direction", wsTrade.Rows(1), 0)).Value & "</p>"
            ' ... (rest of the email body generation)
            emailBody = emailBody & "</body></html>"

            ' Create a new mail item
            Set outlookMail = outlookApp.CreateItem(0)

            ' Customize email properties
            With outlookMail
                .Subject = "Trade Details for WIService"
                .HTMLBody = emailBody
                .Recipients.Add "recipient@example.com" ' Add recipient's email address
                .Display
            End With

            ' Release Outlook mail object
            Set outlookMail = Nothing
        End If
    Next i

    ' Release Outlook application object
    Set outlookApp = Nothing
End Sub
