Sub ExecuteTradeDataProcessing()
    CopyData
    AmendSettleLegalEntity
    FilterRowsByPrefix
    RenameHeader("Counterparty ID", "SD5")
    RenameHeader("Settle Legal Entity", "Entity")
    MatchEntities
    SendMismatchEmail
End Sub

Sub CopyData()
    Dim sourceFolderPath As String, sourceFileName As String
    Dim wsSource As Worksheet, wsTarget As Worksheet
    
    sourceFolderPath = ThisWorkbook.Path & "\"
    sourceFileName = "sstemp*.*"
    
    On Error Resume Next
    Set wsTarget = ThisWorkbook.Sheets("TradeData")
    On Error GoTo 0
    
    If wsTarget Is Nothing Then
        Set wsTarget = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
        wsTarget.Name = "TradeData"
    End If
    
    Workbooks.Open sourceFolderPath & Dir(sourceFolderPath & sourceFileName)
    ActiveWorkbook.Sheets(1).UsedRange.Copy Destination:=wsTarget.Range("A1")
    ActiveWorkbook.Close SaveChanges:=False
End Sub

Sub AmendSettleLegalEntity()
    Dim wsTrade As Worksheet, lastRow As Long, i As Long
    Set wsTrade = ThisWorkbook.Sheets("TradeData")
    lastRow = wsTrade.Cells(wsTrade.Rows.Count, "Settle Legal Entity").End(xlUp).Row
    
    For i = 2 To lastRow
        Select Case True
            Case InStr(1, wsTrade.Cells(i, "Settle Legal Entity").Value, "CAPITAL", vbTextCompare) > 0
                wsTrade.Cells(i, "Settle Legal Entity").Value = "BCI"
            Case InStr(1, wsTrade.Cells(i, "Settle Legal Entity").Value, "PIC-NY", vbTextCompare) > 0 Or InStr(1, wsTrade.Cells(i, "Settle Legal Entity").Value, "INBR", vbTextCompare) > 0
                wsTrade.Cells(i, "Settle Legal Entity").Value = "LNER"
            Case Else
                wsTrade.Cells(i, "Settle Legal Entity").Value = "PLC"
        End Select
    Next i
End Sub

Sub FilterRowsByPrefix()
    Dim ws As Worksheet, lastRow As Long, i As Long
    Set ws = ThisWorkbook.Sheets("TradeData")
    lastRow = ws.Cells(ws.Rows.Count, "AW").End(xlUp).Row
    
    For i = lastRow To 2 Step -1
        If Left(ws.Cells(i, "AW").Value, 5) <> "US912" Then
            ws.Rows(i).Delete
        End If
    Next i
End Sub

Sub RenameHeader(headerName As String, newHeader As String)
    Dim wsTrade As Worksheet, headerCol As Range
    Set wsTrade = ThisWorkbook.Sheets("TradeData")
    Set headerCol = wsTrade.Rows(1).Find(headerName, LookIn:=xlValues, LookAt:=xlWhole)
    
    If Not headerCol Is Nothing Then
        headerCol.Value = newHeader
    Else
        MsgBox headerName & " header not found!", vbExclamation
    End If
End Sub

Sub MatchEntities()
    Dim wsTrade As Worksheet, wsLogic As Worksheet, wsResult As Worksheet
    Dim lastRowTrade As Long, lastRowLogic As Long, resultRow As Long, i As Long
    Set wsTrade = ThisWorkbook.Sheets("TradeData")
    Set wsLogic = ThisWorkbook.Sheets("LogicTable")
    
    On Error Resume Next
    Set wsResult = ThisWorkbook.Sheets("ResultSheet")
    On Error GoTo 0
    
    If wsResult Is Nothing Then
        Set wsResult = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
        wsResult.Name = "ResultSheet"
    End If
    
    lastRowTrade = wsTrade.Cells(wsTrade.Rows.Count, "SDS").End(xlUp).Row
    lastRowLogic = wsLogic.Cells(wsLogic.Rows.Count, "SDS").End(xlUp).Row
    resultRow = 1
    
    For i = 2 To lastRowTrade
        Dim foundCell As Range
        Set foundCell = wsLogic.Columns("SDS").Find(wsTrade.Cells(i, "SDS").Value, LookIn:=xlValues, LookAt:=xlWhole)
        
        If Not foundCell Is Nothing Then
            With wsResult
                .Cells(resultRow, 1).Resize(, 8).Value = Array(wsTrade.Cells(i, "SDS").Value, _
                                                                wsTrade.Cells(i, .Match("Account Legal Name", wsTrade.Rows(1), 0)).Value, _
                                                                wsTrade.Cells(i, .Match("Trade ID", wsTrade.Rows(1), 0)).Value, _
                                                                wsTrade.Cells(i, .Match("Entity", wsTrade.Rows(1), 0)).Value, _
                                                                wsLogic.Cells(foundCell.Row, .Match("Entity", wsLogic.Rows(1), 0)).Value, _
                                                                wsTrade.Cells(1, .Match("Quantity", wsTrade.Rows(1), 0)).Value, _
                                                                wsTrade.Cells(i, .Match("Security Description", wsTrade.Rows(1), 0)).Value, _
                                                                wsTrade.Cells(1, .Match("Settle Date", wsTrade.Rows(1), 0)).Value)
            End With
            resultRow = resultRow + 1
        End If
    Next i
End Sub

Sub SendMismatchEmail()
    Dim wsResult As Worksheet, lastRowResult As Long
    Dim outlookApp As Object, outlookMail As Object, emailBody As String
    
    Set wsResult = ThisWorkbook.Sheets("ResultSheet")
    lastRowResult = wsResult.Cells(wsResult.Rows.Count, 1).End(xlUp).Row
    
    ' Check if there are any mismatching entities
    If WorksheetFunction.CountIf(wsResult.Range("D2:D" & lastRowResult), "<>") > 0 Then
        emailBody = "Mismatching Entities Details:" & vbCrLf

        For i = 2 To lastRowResult
            If wsResult.Cells(1, 4).Value <> wsResult.Cells(i, 5).Value Then
                emailBody = emailBody & "Row " & i & ": Entities do not match." & vbCrLf _
                    & "SDS: " & wsResult.Cells(i, 1).Value & vbCrLf _
                    & "Account Legal Name: " & wsResult.Cells(1, 2).Value & vbCrLf _
                    & "Trade ID: " & wsResult.Cells(i, 3).Value & vbCrLf _
                    & "Trade Data Entity: " & wsResult.Cells(i, 4).Value & vbCrLf _
                    & "Logic Table Entity: " & wsResult.Cells(i, 5).Value & vbCrLf _
                    & "Quantity: " & wsResult.Cells(1, 6).Value & vbCrLf _
                    & "Security Description: " & wsResult.Cells(i, 7).Value & vbCrLf _
                    & "Settle Date: " & wsResult.Cells(i, 8).Value & vbCrLf & vbCrLf
            End If
        Next i

        ' Send email only if there are mismatching entities
        Set outlookApp = CreateObject("Outlook.Application")
        Set outlookMail = outlookApp.CreateItem(0)
        
        With outlookMail
            .Subject = "T+0 UST Entity Matches - Regulatory/Financial Impact"
            .Body = emailBody & "Please wash today as per Logic Table Entity Stated." & vbCrLf & vbCrLf _
                & "Kind Regards," & vbCrLf & "Jeremy Kaaria"
            .Recipients.Add "ukratessalessupport@barclays.com"
            .Display
        End With
        
        Set outlookMail = Nothing
        Set outlookApp = Nothing
    End If
End Sub
