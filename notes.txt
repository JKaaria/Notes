
Sub AmendSettleLegalEntity()
    ' Code for Amending Settle Legal Entity
End Sub

Sub RenameSettleLegalEntityToEntity()
    ' Code for Renaming Settle Legal Entity to Entity
End Sub

Sub RenameCounterpartyIDToSDS()
    ' Code for Renaming Counterparty ID to SDS
End Sub

Sub CopyMatchingSDSValues()
    ' Code for Copying Matching SDS Values
End Sub

Sub SendMismatchDetailsEmail()
    ' Code for Sending Mismatch Details Email
End Sub

Sub SendMatchedDetailsEmail()
    ' Define variables
    Dim wsResult As Worksheet
    Dim lastRowResult As Long
    Dim outlookApp As Object
    Dim outlookMail As Object
    Dim emailBody As String
    Dim sdsList As Collection
    Dim sds As Variant
    
    ' Set worksheet
    Set wsResult = ThisWorkbook.Sheets("ResultSheet") ' Replace "ResultSheet" with the actual name of your sheet
    
    ' Find the last row in ResultSheet
    lastRowResult = wsResult.Cells(wsResult.Rows.Count, 1).End(xlUp).Row
    
    ' Initialize collection to store unique SDS values
    Set sdsList = New Collection
    
    ' Loop through the rows in ResultSheet to check for matching entities
    For i = 2 To lastRowResult
        If wsResult.Cells(i, 4).Value = wsResult.Cells(i, 5).Value Then
            ' Add SDS to the collection
            On Error Resume Next
            sdsList.Add wsResult.Cells(i, 1).Value, CStr(wsResult.Cells(i, 1).Value)
            On Error GoTo 0
        End If
    Next i
    
    ' Create Outlook Application
    Set outlookApp = CreateObject("Outlook.Application")
    
    ' Loop through unique SDS values in the collection
    For Each sds In sdsList
        ' Create a new mail item
        Set outlookMail = outlookApp.CreateItem(0)
        
        ' Initialize email body
        emailBody = "Details of Successful Trades for SDS: " & sds & vbCrLf & vbCrLf
        
        ' Loop through the rows in ResultSheet for the current SDS
        For i = 2 To lastRowResult
            If wsResult.Cells(i, 1).Value = sds Then
                ' Add details of successful trade to email body
                emailBody = emailBody & "Row " & i & ": Entity match." & vbCrLf & _
                             "SDS: " & wsResult.Cells(i, 1).Value & vbCrLf & _
                             "Account Legal Name: " & wsResult.Cells(i, 2).Value & vbCrLf & _
                             "Trade ID: " & wsResult.Cells(i, 3).Value & vbCrLf & _
                             "Entity: " & wsResult.Cells(i, 4).Value & vbCrLf & vbCrLf
            End If
        Next i
        
        ' Retrieve the email address from LogicTable based on SDS
        Dim emailRecipient As String
        On Error Resume Next
        emailRecipient = WorksheetFunction.VLookup(sds, wsResult.ListObjects("LogicTable").ListColumns("SDS").DataBodyRange.Offset(, 6), 1, False)
        On Error GoTo 0
        
        ' Customize email properties
        With outlookMail
            .Subject = "Successful Trades for SDS: " & sds
            .Body = emailBody & vbCrLf & "Please review and acknowledge." & vbCrLf & vbCrLf & _
                    "Best regards," & vbCrLf & _
                    "Your Name"
            
            ' Add recipient's email address
            If emailRecipient <> "" Then
                .Recipients.Add emailRecipient
            End If
            
            ' Send the email
            .Send
        End With
        
        ' Release Outlook objects
        Set outlookMail = Nothing
    Next sds

    MsgBox "Matched details emails sent!", vbInformation

End Sub
