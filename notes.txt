Sub ProcessTradeData()
    Dim tradeDataSheet As Worksheet
    Dim ssiaSheet As Worksheet
    Dim lastRowTradeData As Long
    Dim lastRowSSIA As Long
    Dim i As Long

    ' Set reference to TradeData and SSIAffirmation sheets
    Set tradeDataSheet = ThisWorkbook.Sheets("TradeData")
    Set ssiaSheet = ThisWorkbook.Sheets("SSIAffirmation")

    ' Find the last row in TradeData sheet
    lastRowTradeData = tradeDataSheet.Cells(tradeDataSheet.Rows.Count, "B").End(xlUp).Row

    ' Find the last row in SSIAffirmation sheet
    lastRowSSIA = ssiaSheet.Cells(ssiaSheet.Rows.Count, "B").End(xlUp).Row

    ' Loop through TradeData sheet
    For i = lastRowTradeData To 2 Step -1 ' Start from the last row and move upwards
        ' Check if the value in column BI exists in SSIAffirmation sheet column B
        If IsInArray(tradeDataSheet.Cells(i, 57).Value, ssiaSheet.Range("B2:B" & lastRowSSIA).Value) Then
            ' If match found, create email and continue to the next row
            CreateEmail tradeDataSheet, i, ssiaSheet
        Else
            ' If no match found, delete the row
            tradeDataSheet.Rows(i).Delete
        End If
    Next i
End Sub

Sub CreateEmail(tradeDataSheet As Worksheet, rowIndex As Long, ssiaSheet As Worksheet)
    Dim outlookApp As Object
    Dim outlookMail As Object
    Dim toAddress As String
    Dim subject As String
    Dim body As String

    ' Set up Outlook
    Set outlookApp = CreateObject("Outlook.Application")
    Set outlookMail = outlookApp.CreateItem(0)

    ' Get the "to" address from SSIAffirmation sheet
    toAddress = ssiaSheet.Cells(Application.Match(tradeDataSheet.Cells(rowIndex, 57).Value, ssiaSheet.Range("B:B"), 0) + 1, 2).Value

    ' Set up the subject
    subject = "UST SSI Affirmation - " & ssiaSheet.Cells(Application.Match(tradeDataSheet.Cells(rowIndex, 57).Value, ssiaSheet.Range("B:B"), 0) + 1, 1).Value & "-" & ssiaSheet.Cells(Application.Match(tradeDataSheet.Cells(rowIndex, 57).Value, ssiaSheet.Range("B:B"), 0) + 1, 2).Value

    ' Set up the body of the email
    body = "Contents from columns E, G, H, O, T, AF, AW:" & vbCrLf & _
           "E: " & tradeDataSheet.Cells(rowIndex, 5).Value & vbCrLf & _
           "G: " & tradeDataSheet.Cells(rowIndex, 7).Value & vbCrLf & _
           "H: " & tradeDataSheet.Cells(rowIndex, 8).Value & vbCrLf & _
           "O: " & tradeDataSheet.Cells(rowIndex, 15).Value & vbCrLf & _
           "T: " & tradeDataSheet.Cells(rowIndex, 20).Value & vbCrLf & _
           "AF: " & tradeDataSheet.Cells(rowIndex, 32).Value & vbCrLf & _
           "AW: " & tradeDataSheet.Cells(rowIndex, 49).Value

    ' Set up the email properties
    With outlookMail
        .To = toAddress
        .Subject = subject
        .Body = body
        .Display ' You can use .Send instead of .Display to send the email automatically
    End With

    ' Clean up
    Set outlookMail = Nothing
    Set outlookApp = Nothing
End Sub

Function IsInArray(value As Variant, arrayToCheck As Variant) As Boolean
    ' Function to check if a value is in an array
    Dim element As Variant
    For Each element In arrayToCheck
        If element = value Then
            IsInArray = True
            Exit Function
        End If
    Next element
    IsInArray = False
End Function

