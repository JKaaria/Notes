Sub GenerateGroupedEmails()
    Dim ws As Worksheet
    Dim failCodeColumn As Range
    Dim failDescriptionColumn As Range
    Dim lastRow As Long
    Dim i As Long
    Dim outlookApp As Object
    Dim outlookMail As Object
    Dim emailBody As String
    Dim groupedCodes As Variant
    Dim currentCode As Variant

    ' Set the worksheet variable
    Set ws = ThisWorkbook.Sheets("AFT")

    ' Find the header row and locate the "Fail Code" and "Fail Description" columns
    On Error Resume Next
    Set failCodeColumn = ws.Rows(1).Find(What:="Fail Code", LookIn:=xlValues, LookAt:=xlWhole)
    Set failDescriptionColumn = ws.Rows(1).Find(What:="Fail Description", LookIn:=xlValues, LookAt:=xlWhole)
    On Error GoTo 0

    ' Check if the "Fail Code" and "Fail Description" columns are found
    If Not (failCodeColumn Is Nothing Or failDescriptionColumn Is Nothing) Then
        ' Find the last row in the "Fail Code" column
        lastRow = ws.Cells(ws.Rows.Count, failCodeColumn.Column).End(xlUp).Row

        ' Define the grouped fail codes
        groupedCodes = Array(102, 133, 107, 108, 67, 11)

        ' Loop through each row in the "Fail Code" column
        For i = 2 To lastRow ' Assuming data starts from row 2

            ' Get the current Fail Code
            currentCode = ws.Cells(i, failCodeColumn.Column).Value

            ' Check if the current code is in the grouped codes
            If IsInArray(currentCode, groupedCodes) Then
                ' If the current code is in the grouped codes, append the email body
                emailBody = emailBody & vbCrLf & GetEmailBody(ws, i)
            Else
                ' If the current code is not in the grouped codes, create and display email
                If Not emailBody = "" Then
                    ' If there's an existing email body, create and display the grouped email
                    Set outlookApp = CreateObject("Outlook.Application")
                    Set outlookMail = outlookApp.CreateItem(0)
                    With outlookMail
                        .Subject = GetSubject(ws, i - 1, failDescriptionColumn.Column)
                        .Body = emailBody
                        .Display
                    End With
                    ' Reset the email body
                    emailBody = ""
                End If

                ' Create and display individual email
                Set outlookApp = CreateObject("Outlook.Application")
                Set outlookMail = outlookApp.CreateItem(0)
                With outlookMail
                    .Subject = GetSubject(ws, i, failDescriptionColumn.Column)
                    .Body = GetEmailBody(ws, i)
                    .Display
                End With
            End If
        Next i

        ' Check if there's an existing email body after the loop
        If Not emailBody = "" Then
            ' If there's an existing email body, create and display the grouped email
            Set outlookApp = CreateObject("Outlook.Application")
            Set outlookMail = outlookApp.CreateItem(0)
            With outlookMail
                .Subject = GetSubject(ws, i - 1, failDescriptionColumn.Column)
                .Body = emailBody
                .Display
            End With
        End If
    Else
        MsgBox "Column 'Fail Code' or 'Fail Description' not found in the worksheet."
    End If
End Sub

Function IsInArray(valToBeFound As Variant, arr As Variant) As Boolean
    ' Function to check if a value is in an array
    Dim element As Variant
    For Each element In arr
        If element = valToBeFound Then
            IsInArray = True
            Exit Function
        End If
    Next element
    IsInArray = False
End Function

Function GetSubject(ws As Worksheet, row As Long, col As Long) As String
    ' Function to get the subject for the email
    GetSubject = ws.Cells(row, col).Value
End Function

Function GetEmailBody(ws As Worksheet, row As Long) As String
    ' Function to get the email body for the email
    GetEmailBody = "Trade Date: " & ws.Cells(row, ws.Rows(1).Find(What:="Trade Date").Column).Value & vbCrLf _
                 & "P/S: " & ws.Cells(row, ws.Rows(1).Find(What:="P/S").Column).Value & vbCrLf _
                 & "Price: " & ws.Cells(row, ws.Rows(1).Find(What:="Price").Column).Value & vbCrLf _
                 & "Value Date: " & ws.Cells(row, ws.Rows(1).Find(What:="Value Date").Column).Value & vbCrLf _
                 & "Nominal: " & ws.Cells(row, ws.Rows(1).Find(What:="Nominal").Column).Value & vbCrLf _
                 & "Ticket: " & ws.Cells(row, ws.Rows(1).Find(What:="Ticket").Column).Value & vbCrLf _
                 & "Instrument ID: " & ws.Cells(row, ws.Rows(1).Find(What:="Instrument ID").Column).Value & vbCrLf _
                 & "Instrument: " & ws.Cells(row, ws.Rows(1).Find(What:="Instrument").Column).Value & vbCrLf _
                 & "Accrued Interest: " & ws.Cells(row, ws.Rows(1).Find(What:="Accrued Interest").Column).Value & vbCrLf _
                 & "Net Proceeds: " & ws.Cells(row, ws.Rows(1).Find(What:="Net Proceeds").Column).Value & vbCrLf _
                 & "Fail Description: " & ws.Cells(row, ws.Rows(1).Find(What:="Fail Description").Column).Value & vbCrLf _
                 & "Salesperson Name: " & ws.Cells(row, ws.Rows(1).Find(What:="Salesperson Name").Column).Value & vbCrLf _
                 & "Crest ID: " & ws.Cells(row, ws.Rows(1).Find(What:="Crest ID").Column).Value
End Function

