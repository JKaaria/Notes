Sub Three()
    Dim wsTrade As Worksheet
    Dim wsContacts As Worksheet
    Dim lastRow As Long
    Dim counterpartyIdCol As Range
    Dim i As Long
    Dim outlookApp As Object
    Dim outlookMail As Object
    Dim emailBody As String
    Dim toAddress As Variant

    ' Set worksheets
    Set wsTrade = ThisWorkbook.Sheets("TradeData")
    Set wsContacts = ThisWorkbook.Sheets("Contacts")

    ' Find the "Counterparty ID" column based on header
    Set counterpartyIdCol = wsTrade.Rows(1).Find("Counterparty ID", LookIn:=xlValues, LookAt:=xlWhole)

    ' Check if the "Counterparty ID" column is found
    If Not counterpartyIdCol Is Nothing Then
        ' Find the last row in the TradeData sheet
        lastRow = wsTrade.Cells(wsTrade.Rows.Count, counterpartyIdCol.Column).End(xlUp).Row

        ' Create Outlook Application
        Set outlookApp = CreateObject("Outlook.Application")

        ' Loop through each row in "Counterparty ID" column
        For i = 2 To lastRow
            ' Debugging: Display the value in "Counterparty ID" for the current row
            Debug.Print "Counterparty ID for Row " & i & ": " & wsTrade.Cells(i, counterpartyIdCol.Column).Value
            
            ' VLOOKUP to retrieve "To" address from the "Contacts" sheet
            toAddress = Application.VLookup(wsTrade.Cells(i, counterpartyIdCol.Column).Value, wsContacts.Columns("B:C"), 2, False)
            
            ' Debugging: Display the retrieved "To" address
            Debug.Print "To Address for Row " & i & ": " & toAddress
            
            ' Check if the VLOOKUP was successful
            If Not IsError(toAddress) Then
                ' Generate HTML-formatted email body
                emailBody = "<html><body>"
                emailBody = emailBody & "<p><strong>Trade ID:</strong> " & wsTrade.Cells(i, WorksheetFunction.Match("Trade ID", wsTrade.Rows(1), 0)).Value & "</p>"
                ' ... (other fields)
                emailBody = emailBody & "<p><strong>Client Contact:</strong> " & wsTrade.Cells(i, WorksheetFunction.Match("Client Contact", wsTrade.Rows(1), 0)).Value & "</p>"
                
                ' ... (rest of the email body generation)
                emailBody = emailBody & "</body></html>"

                ' Create a new mail item
                Set outlookMail = outlookApp.CreateItem(0)

                ' Customize email properties
                With outlookMail
                    If Not IsEmpty(toAddress) Then
                        ' Send to the retrieved "To" address
                        .Recipients.Add toAddress
                    Else
                        ' If contact not found, send to Jeremy
                        .Recipients.Add "jeremy.kaaria@barclays.com"
                        .Subject = "Please Update Contact Matrix"
                    End If
                    
                    .SentOnBehalfOfName = "fi_allocations@barclayscorp.com"
                    .HTMLBody = emailBody
                    .Display
                End With

                ' Release Outlook mail object
                Set outlookMail = Nothing
            Else
                MsgBox "Error retrieving 'To' address for Trade ID: " & wsTrade.Cells(i, WorksheetFunction.Match("Trade ID", wsTrade.Rows(1), 0)).Value, vbExclamation
            End If
        Next i
    Else
        MsgBox "Column 'Counterparty ID' not found in the TradeData sheet.", vbExclamation
    End If

    ' Release Outlook application object
    Set outlookApp = Nothing
End Sub

