Sub SortTradeDataByDate()
    Dim ws As Worksheet
    Dim lastRow As Long
    
    ' Set the worksheet
    Set ws = ThisWorkbook.Sheets("TradeData")
    
    ' Find the last row with data in column A
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' Delete the last row with data
    If lastRow > 1 Then
        ws.Rows(lastRow).Delete
        lastRow = lastRow - 1 ' Update the lastRow variable
    End If
    
    ' Convert date strings to actual Date objects
    Dim dateRange As Range
    Set dateRange = ws.Range("A2:A" & lastRow)

    For Each cell In dateRange
        If IsDate(cell.Value) Then
            cell.Value = CDate(cell.Value)
        Else
            ' Handle non-date values, or you can skip/ignore them
            ' For example, you can print a message in the Immediate Window
            Debug.Print "Cell " & cell.Address & " contains a non-date value"
        End If
    Next cell
    
    ' Sort the data by Trade Date in descending order
    ws.Sort.SortFields.Clear
    ws.Sort.SortFields.Add Key:=dateRange, SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
    With ws.Sort
        .SetRange dateRange ' Exclude the deleted row from the sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    ' Now, you can loop through the sorted data
    Dim i As Long
    For i = 2 To lastRow ' Assuming data starts from row 2
        ' Access the data using ws.Cells(i, ColumnIndex)
        ' Example: Dim tradeDate As Date: tradeDate = ws.Cells(i, 1).Value
        ' Perform your processing here
        
        ' For demonstration, let's just print the Trade Date in the Immediate Window
        Debug.Print "Trade Date: " & ws.Cells(i, 1).Value
    Next i
End Sub
